"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[251],{3792:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"frontend","title":"Building a Frontend for Your Smart Contract","description":"In this section, we\'ll create a simple frontend using React and ethers.js to interact with your deployed SimpleStorage contract.","source":"@site/docs/02-frontend.md","sourceDirName":".","slug":"/frontend","permalink":"/blockchain-101/docs/frontend","draft":false,"unlisted":false,"editUrl":"https://github.com/tanguyvans/blockchain-101/docs/02-frontend.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"First Smart Contract","permalink":"/blockchain-101/docs/first-contract"}}');var o=t(4848),a=t(8453);const c={sidebar_position:4},i="Building a Frontend for Your Smart Contract",s={},l=[{value:"Setting Up the Frontend Project",id:"setting-up-the-frontend-project",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Creating the Contract Interface",id:"creating-the-contract-interface",level:2},{value:"Running the Frontend",id:"running-the-frontend",level:2},{value:"Interacting with the Contract",id:"interacting-with-the-contract",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"building-a-frontend-for-your-smart-contract",children:"Building a Frontend for Your Smart Contract"})}),"\n",(0,o.jsx)(e.p,{children:"In this section, we'll create a simple frontend using React and ethers.js to interact with your deployed SimpleStorage contract."}),"\n",(0,o.jsx)(e.h2,{id:"setting-up-the-frontend-project",children:"Setting Up the Frontend Project"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"Create a new React project using Vite:"}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npm create vite@latest frontend -- --template react-ts\ncd frontend\nnpm install\n"})}),"\n",(0,o.jsxs)(e.ol,{start:"2",children:["\n",(0,o.jsx)(e.li,{children:"Install required dependencies:"}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npm install ethers@6.7.0 @metamask/detect-provider\n"})}),"\n",(0,o.jsx)(e.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,o.jsx)(e.p,{children:"After initialization, your project will have the following structure:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"frontend/\n\u2502\n\u251c\u2500\u2500 src/\n\u2502 \u251c\u2500\u2500 components/\n\u2502 \u2502 \u251c\u2500\u2500 SimpleStorage.tsx # Main contract component\n\u2502 \u2502 \u251c\u2500\u2500 ConnectWallet.tsx # Wallet connection component\n\u2502 \u2502 \u251c\u2500\u2500 TransactionStatus.tsx # Transaction status component\n\u2502 \u2502 \u2514\u2500\u2500 EventLog.tsx # Event log component\n\u2502 \u251c\u2500\u2500 contracts/\n\u2502 \u2502 \u2514\u2500\u2500 SimpleStorage.json # Contract ABI\n\u2502 \u251c\u2500\u2500 hooks/\n\u2502 \u2502 \u2514\u2500\u2500 useContract.ts # Custom hook for contract interaction\n\u2502 \u251c\u2500\u2500 App.tsx\n\u2502 \u2514\u2500\u2500 main.tsx\n\u2502\n\u251c\u2500\u2500 public/\n\u2514\u2500\u2500 package.json\n"})}),"\n",(0,o.jsx)(e.h2,{id:"creating-the-contract-interface",children:"Creating the Contract Interface"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["Create a new file ",(0,o.jsx)(e.code,{children:"src/contracts/SimpleStorage.json"})," with your contract ABI:"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'[\n  {\n    "inputs": [],\n    "name": "get",\n    "outputs": [{ "type": "uint256" }],\n    "stateMutability": "view",\n    "type": "function"\n  },\n  {\n    "inputs": [{ "type": "uint256" }],\n    "name": "set",\n    "outputs": [],\n    "stateMutability": "nonpayable",\n    "type": "function"\n  },\n  {\n    "anonymous": false,\n    "inputs": [{ "indexed": false, "type": "uint256" }],\n    "name": "DataStored",\n    "type": "event"\n  }\n]\n'})}),"\n",(0,o.jsxs)(e.ol,{start:"2",children:["\n",(0,o.jsxs)(e.li,{children:["Create the SimpleStorage component in ",(0,o.jsx)(e.code,{children:"src/components/SimpleStorage.tsx"}),":"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { useState, useEffect } from "react";\nimport { ethers } from "ethers";\nimport detectEthereumProvider from "@metamask/detect-provider";\nimport SimpleStorageABI from "../contracts/SimpleStorage.json";\n\nconst CONTRACT_ADDRESS = "0xAAaE4eB3092E09B4BDc2F134C84bfF2bBBBc251B";\n\nexport function SimpleStorage() {\n  const [value, setValue] = useState<number>(0);\n  const [inputValue, setInputValue] = useState<string>("");\n  const [account, setAccount] = useState<string>("");\n  const [contract, setContract] = useState<ethers.Contract | null>(null);\n\n  useEffect(() => {\n    initializeContract();\n  }, []);\n\n  const initializeContract = async () => {\n    const provider = await detectEthereumProvider();\n\n    if (provider) {\n      // Request account access\n      const accounts = await (window as any).ethereum.request({\n        method: "eth_requestAccounts",\n      });\n      setAccount(accounts[0]);\n\n      // Create contract instance\n      const ethersProvider = new ethers.BrowserProvider(\n        (window as any).ethereum\n      );\n      const signer = await ethersProvider.getSigner();\n      const contract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        SimpleStorageABI,\n        signer\n      );\n      setContract(contract);\n\n      // Get initial value\n      const currentValue = await contract.get();\n      setValue(Number(currentValue));\n    }\n  };\n\n  const handleSetValue = async () => {\n    if (contract && inputValue) {\n      try {\n        const tx = await contract.set(inputValue);\n        await tx.wait();\n        const newValue = await contract.get();\n        setValue(Number(newValue));\n        setInputValue("");\n      } catch (error) {\n        console.error("Error setting value:", error);\n      }\n    }\n  };\n\n  return (\n    <div className="container">\n      <h1>Simple Storage Contract</h1>\n      <p>Connected Account: {account}</p>\n      <p>Current Value: {value}</p>\n\n      <div className="input-group">\n        <input\n          type="number"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder="Enter new value"\n        />\n        <button onClick={handleSetValue}>Set Value</button>\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,o.jsxs)(e.ol,{start:"3",children:["\n",(0,o.jsxs)(e.li,{children:["Update ",(0,o.jsx)(e.code,{children:"src/App.tsx"}),":"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { SimpleStorage } from "./components/SimpleStorage";\nimport "./App.css";\n\nfunction App() {\n  return (\n    <div className="App">\n      <SimpleStorage />\n    </div>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,o.jsxs)(e.ol,{start:"4",children:["\n",(0,o.jsxs)(e.li,{children:["Add some basic styling in ",(0,o.jsx)(e.code,{children:"src/App.css"}),":"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-css",children:".container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.input-group {\n  margin: 2rem 0;\n}\n\ninput {\n  padding: 0.5rem;\n  margin-right: 1rem;\n  font-size: 1rem;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  background-color: #646cff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #535bf2;\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"running-the-frontend",children:"Running the Frontend"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"Start the development server:"}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,o.jsxs)(e.ol,{start:"2",children:["\n",(0,o.jsxs)(e.li,{children:["Open your browser to the provided URL (usually ",(0,o.jsx)(e.a,{href:"http://localhost:5173",children:"http://localhost:5173"}),")"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"interacting-with-the-contract",children:"Interacting with the Contract"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"Connect your MetaMask wallet"}),"\n",(0,o.jsx)(e.li,{children:"Make sure you're on the Base Sepolia network"}),"\n",(0,o.jsx)(e.li,{children:"Use the input field to set a new value"}),"\n",(0,o.jsx)(e.li,{children:'Click "Set Value" to update the contract'}),"\n",(0,o.jsx)(e.li,{children:"The current value will update after the transaction is confirmed"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>i});var r=t(6540);const o={},a=r.createContext(o);function c(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:c(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);